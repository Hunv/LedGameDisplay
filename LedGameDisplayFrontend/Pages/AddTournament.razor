@page "/addtournament"
@using LedGameDisplayFrontend.Data
@using System.Net.Http
@using System.Web
@inject NavigationManager NavigationManager

<h1>Add Tournament</h1>

<p>Tournament Details</p>

<input id="txtName" type="text" @bind="newTournament.Name" />
<a>Name</a>
<br />

<input id="txtDate" type="text" @bind="newTournament.Date" />
<a>Datum</a>
<br />

<input id="txtCity" type="text" @bind="newTournament.City" />
<a>Stadt</a>
<br />

<input id="txtPlace" type="text" @bind="newTournament.Place" />
<a>Einrichtung (Name der Schwimmhalle, Sportplatz, ...)</a>
<br />

<button class="btn btn-primary" @onclick="SaveTournament">Speichern</button>

@code {
    private Tournament newTournament = new Tournament();

    private void NewTournament()
    {

    }

    private async void SaveTournament()
    {
        HttpClient client = new HttpClient();

        var requestMessage = new HttpRequestMessage()
        {
            Method = new HttpMethod("POST"),
            RequestUri = new Uri("https://localhost:44302/api/tournament"),
            Content =
                new StringContent(string.Format(
                    "{{\"name\":\"{0}\",\"city\":\"{1}\",\"place\":\"{2}\",\"date\":\"{3}\"}}",
                    HttpUtility.UrlEncode(newTournament.Name, System.Text.Encoding.Default),
                    HttpUtility.UrlEncode(newTournament.City, System.Text.Encoding.Default),
                    HttpUtility.UrlEncode(newTournament.Place, System.Text.Encoding.Default),
                    newTournament.Date.ToString("yyyy'-'MM'-'dd'T'HH':'mm':'ss")
                    ))
        };

        requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");

        var response = await client.SendAsync(requestMessage);

        var responseStatusCode = response.StatusCode;
        var responseBody = await response.Content.ReadAsStringAsync();
        NavigationManager.NavigateTo("/tournaments");
    }
}


